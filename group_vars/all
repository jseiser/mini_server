ansible_user: justin
ansible_become_password: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    63326635313735383239356563316330663437663334356364376664353466653363313036343335
    3265333631616433353031636137303937613736373038360a646362656265333736336537326461
    66336437663338363764633935336461613462343164346564653839386633613833333437613865
    6131383333303732330a656536356436323462623265616230373837393132663661323831623763
    6131

base_packages:
    - nfs-common
    - nfs4-acl-tools

nfs:
    server: 192.168.121.2
    server_host: /volume1/
    mountpoint: /share
    permission: "0777"
    myopts: "auto,nofail,noatime,nolock,intr,tcp,actimeo=1800"
    share_data:
        docker_configs: "docker_configs"
        movies: "media/movies"
        tv: "media/tv"
        new: "media/new"

common:
    config_dir: "{{ nfs.mountpoint }}/docker_configs"
    restart_policy: unless-stopped
    state: "started"
    docker_network_name: seiser
    time_zone: "America/New_York"
    umask: "022"
    uid: "1000"
    gid: "1000"
    ls_registry: "lscr.io/linuxserver"
    container_platform: "amd64"

docker_users:
    - "{{ ansible_user }}"

pip_install_packages:
    - name: docker

sabnzbd:
    network_name: "{{ common.docker_network_name }}"
    name: sabnzbd
    image: "{{ common.ls_registry }}/sabnzbd:{{ common.container_platform }}-3.7.0"
    vars:
        PUID: "{{ common.uid }}"
        PGID: "{{ common.gid }}"
        TZ: "{{ common.time_zone }}"
        UMASK: "{{ common.umask }}"
    volumes:
        - "{{ common.config_dir }}/sabnzbd/config:/config"
        - "{{ nfs.mountpoint }}/new:/downloads"
        - "{{ nfs.mountpoint }}/new/incomplete:/incomplete-downloads"
    ports:
        - "8080:8080"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

deluge:
    network_name: "{{ common.docker_network_name }}"
    name: deluge
    image: "{{ common.ls_registry }}/deluge:{{ common.container_platform }}-2.1.1-r5-ls183"
    vars:
        PUID: "{{ common.uid }}"
        PGID: "{{ common.gid }}"
        TZ: "{{ common.time_zone }}"
        UMASK: "{{ common.umask }}"
    volumes:
        - "{{ common.config_dir }}/deluge/config:/config"
        - "{{ nfs.mountpoint }}/new:/downloads"
    ports:
        - "8112:8112"
        - "6881:6881"
        - "6881:6881/udp"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

nzbhydra2:
    network_name: "{{ common.docker_network_name }}"
    name: nzbhydra2
    image: "{{ common.ls_registry }}/nzbhydra2:{{ common.container_platform }}-v4.6.1-ls74"
    vars:
        PUID: "{{ common.uid }}"
        PGID: "{{ common.gid }}"
        TZ: "{{ common.time_zone }}"
        UMASK: "{{ common.umask }}"
    volumes:
        - "{{ common.config_dir }}/nzbhydra2/config:/config"
        - "{{ nfs.mountpoint }}/new:/downloads"
    ports:
        - "5076:5076"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

jackett:
    network_name: "{{ common.docker_network_name }}"
    name: jackett
    image: "{{ common.ls_registry }}/jackett:{{ common.container_platform }}-v0.20.2218-ls81"
    vars:
        PUID: "{{ common.uid }}"
        PGID: "{{ common.gid }}"
        TZ: "{{ common.time_zone }}"
        UMASK: "{{ common.umask }}"
        AUTO_UPDATE: "false"
    volumes:
        - "{{ common.config_dir }}/jackett/config:/config"
        - "{{ nfs.mountpoint }}/new:/downloads"
    ports:
        - "9117:9117"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

radarr:
    network_name: "{{ common.docker_network_name }}"
    name: radarr
    image: "{{ common.ls_registry }}/radarr:{{ common.container_platform }}-4.2.4.6635-ls156"
    vars:
        PUID: "{{ common.uid }}"
        PGID: "{{ common.gid }}"
        TZ: "{{ common.time_zone }}"
        UMASK: "{{ common.umask }}"
    volumes:
        - "{{ common.config_dir }}/radarr/config:/config"
        - "{{ nfs.mountpoint }}/new:/downloads"
        - "{{ nfs.mountpoint }}/movies:/movies"
    ports:
        - "7878:7878"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

sonarr:
    network_name: "{{ common.docker_network_name }}"
    name: sonarr
    image: "{{ common.ls_registry }}/sonarr:{{ common.container_platform }}-3.0.9.1549-ls163"
    vars:
        PUID: "{{ common.uid }}"
        PGID: "{{ common.gid }}"
        TZ: "{{ common.time_zone }}"
        UMASK: "{{ common.umask }}"
    volumes:
        - "{{ common.config_dir }}/sonarr/config:/config"
        - "{{ nfs.mountpoint }}/new:/downloads"
        - "{{ nfs.mountpoint }}/tv:/tv"
    ports:
        - "8989:8989"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

plex:
    network_name: "{{ common.docker_network_name }}"
    name: plex
    image: "{{ common.ls_registry }}/plex:{{ common.container_platform }}-1.29.2.6364-6d72b0cf6-ls143"
    vars:
        PUID: "{{ common.uid }}"
        PGID: "{{ common.gid }}"
        TZ: "{{ common.time_zone }}"
        UMASK: "{{ common.umask }}"
        VERSION: "docker"
    volumes:
        - "{{ common.config_dir }}/plex/config:/config"
        - "{{ nfs.mountpoint }}/new:/downloads"
        - "{{ nfs.mountpoint }}/tv:/tv"
        - "{{ nfs.mountpoint }}/movies:/movies"
    devices:
        - "/dev/dri:/dev/dri"
    ports:
        - "32400:32400"
        - "1900:1900/udp"
        - "3005:3005"
        - "5353:5353/udp"
        - "8324:8324"
        - "32410:32410/udp"
        - "32412:32412/udp"
        - "32413:32413/udp"
        - "32414:32414/udp"
        - "32469:32469"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

calibre:
    network_name: "{{ common.docker_network_name }}"
    name: calibre
    image: "{{ common.ls_registry }}/calibre:{{ common.container_platform }}-v6.8.0-ls191"
    vars:
        PUID: "{{ common.uid }}"
        PGID: "{{ common.gid }}"
        TZ: "{{ common.time_zone }}"
        UMASK: "{{ common.umask }}"
    volumes:
        - "{{ common.config_dir }}/calibre/config:/config"
        - "{{ common.config_dir }}/calibre/import:/import"
    ports:
        - "9080:8080"
        - "9081:8081"
    security_opts:
        - "seccomp:unconfined"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

calibre_web:
    network_name: "{{ common.docker_network_name }}"
    name: calibre-web
    image: "{{ common.ls_registry }}/calibre-web:{{ common.container_platform }}-0.6.19-ls183"
    vars:
        PUID: "{{ common.uid }}"
        PGID: "{{ common.gid }}"
        TZ: "{{ common.time_zone }}"
        UMASK: "{{ common.umask }}"
        DOCKER_MODS: "linuxserver/mods:universal-calibre"
        OAUTHLIB_RELAX_TOKEN_SCOPE: "1"
    volumes:
        - "{{ common.config_dir }}/calibre-web/config:/config"
        - "{{ common.config_dir }}/calibre:/books"
    ports:
        - "8083:8083"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

duckdns:
    network_name: "{{ common.docker_network_name }}"
    name: duckdns
    image: "{{ common.ls_registry }}/duckdns:{{ common.container_platform }}-ca7e3db0-ls115"
    vars:
        PUID: "{{ common.uid }}"
        PGID: "{{ common.gid }}"
        TZ: "{{ common.time_zone }}"
        UMASK: "{{ common.umask }}"
        SUBDOMAINS: "seiser"
        TOKEN: "78212e1b-ac59-4083-b49b-f470f9503d5f"
    volumes:
        - "{{ common.config_dir }}/duckdns/config:/config"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

prometheus:
    network_name: "{{ common.docker_network_name }}"
    name: prometheus
    image: "prom/prometheus:v2.40.1"
    ports:
        - "9090:9090"
    volumes:
        - "{{ common.config_dir }}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
        - "prometheus_data:/prometheus"
    command:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        - "--web.console.libraries=/etc/prometheus/console_libraries"
        - "--web.console.templates=/etc/prometheus/consoles"
        - "--storage.tsdb.retention.time=168h"
        - "--web.enable-lifecycle"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

node_exporter:
    network_name: "{{ common.docker_network_name }}"
    name: node-exporter
    image: "prom/node-exporter:v1.4.0"
    ports:
        - "9100:9100"
    volumes:
        - "/proc:/host/proc:ro"
        - "/sys:/host/sys:ro"
        - "/:/rootfs:ro"
    command:
        - "--path.procfs=/host/proc"
        - "--path.rootfs=/rootfs"
        - "--path.sysfs=/host/sys"
        - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"

cadvisor:
    network_name: "{{ common.docker_network_name }}"
    name: cadvisor
    image: "gcr.io/cadvisor/cadvisor:v0.46.0"
    privileged: yes
    devices:
        - /dev/kmsg:/dev/kmsg
    volumes:
        - "/:/rootfs:ro"
        - "/var/run:/var/run:ro"
        - "/sys:/sys:ro"
        - "/var/lib/docker/:/var/lib/docker:ro"
        - "/dev/disk/:/dev/disk:ro"
    ports:
        - "8088:8080"
    restart_policy: "{{ common.restart_policy }}"
    state: "{{ common.state }}"
